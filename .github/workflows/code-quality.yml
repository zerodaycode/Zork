name: Code quality and sanity

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'

jobs:
  clippy:
    name: Lint with Clippy
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v3

      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2

      - uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      
      - name: Verifiying the code quality with Clippy 
        run: |
          cd zork++
          cargo clippy --all-targets --all-features
  
  rustfmt:
    name: Verify code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2
      - uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
      - name: Checking the format sanity of the project
        run: |
          cd zork++
          cargo fmt --all -- --check

  tests:
    name: Run the tests for the projects
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        clang_version: [14, 15, 16, 17]
    steps:
      - uses: actions/checkout@v3
      - name: Caching project dependencies
        id: project-cache
        uses: Swatinem/rust-cache@v2
      - name: Install Clang ${{ matrix.clang_version }}
        run: |
          # Exit on error
          set -e
          
          echo "-----> Installing Clang ${{ matrix.clang_version }}"
          
          # Add the GPG key from LLVM
          echo "-----> Adding the GPG key from LLVM"
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          
          # Update the package lists
          echo "-----> Updating the package lists"
          sudo apt update
          
          # Add the LLVM repository for the specified Clang version
          echo "-----> Adding the LLVM repository for Clang ${{ matrix.clang_version }}"
          sudo apt-add-repository "deb http://apt.llvm.org/bookworm/ llvm-toolchain-bookworm-${{ matrix.clang_version }} main"
          
          # Install the specified Clang version and related packages
          echo "-----> Installing Clang ${{ matrix.clang_version }} and related packages"
          sudo apt install --install-suggests clang-${{ matrix.clang_version }}
          sudo apt install libc++-${{ matrix.clang_version }}-dev libc++abi-${{ matrix.clang_version }}-dev libunwind-${{ matrix.clang_version }} libunwind-${{ matrix.clang_version }}-dev libc6 libzstd1
          
          # Update the symbolic link to point to the newly installed Clang version
          echo "-----> Updating the symbolic link to point to Clang ${{ matrix.clang_version }}"
          sudo rm -f /usr/bin/clang++
          sudo ln -s /usr/bin/clang++-${{ matrix.clang_version }} /usr/bin/clang++
          
          # Display the installation directory and version of the installed Clang
          echo "-----> Clang-${{ matrix.clang_version }} was installed on:"
          which clang-${{ matrix.clang_version }}
          echo "-----> Clang++ was installed on:"
          which clang++-${{ matrix.clang_version }}

      - name: Running the tests for the project
        run: |
          cd zork++
          RUST_LOG=trace cargo test 2>&1 --all --color=always --no-fail-fast -- --nocapture --show-output --test-threads=1
